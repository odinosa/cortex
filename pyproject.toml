[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "cortex"
version = "0.1.0"
description = "Assistente de Contexto para Cursor via Model Context Protocol (MCP)"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "Odino Almeida", email = "odinoalmeida@example.com"},
]
dependencies = [
    "click>=8.1.0",  # CLI
    "pydantic>=2.0.0",  # Modelos e validação
    "watchdog>=3.0.0",  # Monitorar alterações
    "rich>=13.0.0",  # UI para terminal
    "jira>=3.5.0",  # Integração Jira (opcional)
]

[project.optional-dependencies]
dev = [
    "pytest==7.3.1",
    "pytest-cov==4.1.0",
    "black==23.3.0",
    "isort==5.12.0",
    "mypy==1.3.0",
    "flake8==6.0.0",
    "pre-commit==3.3.2",
    "types-requests==2.30.0.0",
    "types-PyYAML==6.0.12.10",
    "types-toml==0.10.8.6",
    "sqlalchemy[mypy]==2.0.15",
]

[project.scripts]
cortex = "cortex.cli.main:cli"

[tool.setuptools]
packages = ["cortex"]

[tool.black]
line-length = 88
target-version = ["py310"]

[tool.isort]
profile = "black"
line_length = 88

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = "test_*.py"

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.coverage.run]
source = ["cortex"]
omit = ["tests/*", "docs/*"]
